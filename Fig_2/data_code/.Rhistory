library(ggplot2)
Nnet <- read.nexus.networx("COI_seqs_Mbra_copy1.aln.cl2.fa.nex")
pn <- ggsplitnet(Nnet)
library(tanggle)
pn <- ggsplitnet(Nnet)
Nnet <- read.nexus.networx("COI_seqs_Mbra_copy1.aln.cl2.fa.nex")
pn <- ggsplitnet(Nnet)
library(phangorn)
algn <- read.dna("COI_seqs_Mbra_copy1.aln.cl2.fa")
algn <- read.dna("COI_seqs_Mbra_copy1.aln.cl2.fa", format = "fasta")
algn
Net <- haploNet(algn)
library(phangorn)
Net <- haploNet(algn)
Net <- haploNet(algn)
library(pegas)
Net <- haploNet(algn)
Haps <- haplotype(algn)
Net <- haploNet(Haps)
nt.labs <- attr(Net, "labels")
plot(EveCOINet, size = attr(EveCOINet, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=F, bg = colors) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=F, bg = colors) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=T, bg = colors) #, xy=xy)
## convert data to the necessary format
R <- haploFreq(algn, fac = region, haplo = EveCOIHaps)
rownames(algn)
region <- substr(rownames(algn), 1, 5)
region
## convert data to the necessary format
R <- haploFreq(algn, fac = region, haplo = Haps)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=T, bg = colors) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=F, bg = colors) #, xy=xy)
colors <- c("darkseagreen1", "darkseagreen4", "cyan1", "cyan3", "cyan1")
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=F, bg = colors) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(30, 20),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(0, 20),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(10, 20),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(10, 0),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(1, 0),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(1, -1),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(1, -5),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(-1, -5),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(0, -5),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(-2, -10),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(-3, -15),
scale.ratio = 3, label=F) #, xy=xy)
plot(Net, size = attr(Net, "freq"), pie = R, legend = c(-3, -25),
scale.ratio = 3, label=F) #, xy=xy)
library(ggplot2)
library(tanggle)
Nnet <- read.nexus.networx("COI_seqs_Mbra_copy1.aln.cl2.fa.nex")
pn <- ggsplitnet(Nnet)
tips <- pn$data[pn$data$isTip, ]
tips$id <- sapply(tips$label, function(x) strsplit(x, split = "\\|")[[1]][1])
tips$id <- substr(tips$id, 1, 5)
#tips$species <- sapply(tips$label, function(x) strsplit(x, split = "\\|")[[1]][2])
#coord.info$latlon <- paste0(coord.info$lat, "_", coord.info$lon)
#tips$place <- sapply(tips$id, function(x) coord.info[which(coord.info$sampleid == x), "latlon"][1])
#tips$BIN <- sapply(tips$id, function(x) coord.info[which(coord.info$sampleid == x), "bin_uri"][1])
tips %>% count(x, y, id) -> tips.occur
library(dplyr)
library(ggplot2)
library(tanggle)
Nnet <- read.nexus.networx("COI_seqs_Mbra_copy1.aln.cl2.fa.nex")
pn <- ggsplitnet(Nnet)
tips <- pn$data[pn$data$isTip, ]
tips$id <- sapply(tips$label, function(x) strsplit(x, split = "\\|")[[1]][1])
tips$id <- substr(tips$id, 1, 5)
#tips$species <- sapply(tips$label, function(x) strsplit(x, split = "\\|")[[1]][2])
#coord.info$latlon <- paste0(coord.info$lat, "_", coord.info$lon)
#tips$place <- sapply(tips$id, function(x) coord.info[which(coord.info$sampleid == x), "latlon"][1])
#tips$BIN <- sapply(tips$id, function(x) coord.info[which(coord.info$sampleid == x), "bin_uri"][1])
tips %>% count(x, y, id) -> tips.occur
#  tips.occur <- tips.occur[(!(tips.occur$place %in% c("NA_NA", ""))), ]
#tips.occur <- tips.occur[complete.cases(tips.occur$BIN), ]
#unique(tips.occur$BIN)
ggsplitnet(Nnet) +
geom_point(data = tips.occur, aes(x=x, y=y, color = id, shape=id),
size=10, alpha=1) +
coord_fixed() +
geom_treescale(offset = 0, width = 0.01)
theme(legend.position = 'bottom')
setwd("/mnt/Work/Research/Projects/Genome/texts/2024_review_post-Chromosoma/Baikal-amphipods-review-post-chr2023/Fig_2/data_code")
library(ggplot2)
library(openxlsx)
library(forcats)
gs_kar <- read.xlsx("../../Appendix_tables.xlsx", sheet = 2, rows = c(3, 40))
gs_kar <- gs_kar[!(is.na(gs_kar$Genome.size.FIAD)), ]
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
View(gs_kar)
gs_kar <- read.xlsx("../../Appendix_tables.xlsx", sheet = 2, rows = 4:40)
View(gs_kar)
gs_kar <- gs_kar[!(is.na(gs_kar$Genome.size.FIAD)), ]
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
gs_kar <- read.xlsx("../../Appendix_tables.xlsx", sheet = 2, rows = 4:60)
gs_kar <- gs_kar[!(is.na(gs_kar$Genome.size.FIAD)), ]
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
svg(width = 10, height=5)
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
dev.off()
svg(width = 12, height=5)
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
dev.off()
svg(width = 11, height=5)
ggplot(gs_kar, aes(x=fct_reorder(paste(Genus, "\n", Species), Genome.size.FIAD), y=Genome.size.FIAD)) +
geom_bar(stat="identity") +
xlab("") + ylab("Genome size, pg") +
geom_label(aes(y=2.5, label=`2n`)) +
#  geom_point(aes(y=`2n`), col = "black") +
#  geom_line(aes(y=`2n`), col = "black") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(angle = 90, face="italic", hjust = 1, vjust=0.5, lineheight = 0.6))
dev.off()
